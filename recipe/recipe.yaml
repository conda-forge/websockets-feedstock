# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: 15.0.1
  pytest_k: not (client_connect_canceled_during_handshake or close_idempotency_race_condition or keepalive_is_enabled)
  cov_fail_under: 93

package:
  name: websockets
  version: ${{ version }}

source:
  - url: https://pypi.org/packages/source/w/websockets/websockets-${{ version }}.tar.gz
    sha256: 82544de02076bafba038ce055ee6412d68da13ab47f0c60cab827346de828dee
    target_directory: dist
  - url: https://github.com/python-websockets/websockets/archive/refs/tags/${{ version }}.tar.gz
    sha256: 8451495265af3e368f794c4dc15c99ce90c771d95560f542bff8c64b5455af3b
    target_directory: src

build:
  number: 1
  script:
    - cd dist
    - ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check

requirements:
  build:
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
  host:
    - pip
    - python
    - setuptools
  run:
    - python

tests:
  - python:
      imports: websockets
      pip_check: true
  - files:
      source:
        - src/tests/
    requirements:
      run:
        - pytest-cov
        - werkzeug
    script:
      # lots of fails, hangs on windows
      - if: unix
        then:
          - cd src
          - coverage run --source=websockets --branch -m pytest -vv --tb=long --color=yes -k "${{ pytest_k }}"
          - coverage report --show-missing --skip-covered --fail-under=${{ cov_fail_under }}
about:
  license: BSD-3-Clause
  license_file: dist/LICENSE
  summary: A library for developing WebSocket servers and clients in Python.
  description: |
    websockets is a library for developing WebSocket servers and clients in
    Python. It implements RFC 6455 with a focus on correctness and simplicity.
    It passes the Autobahn Testsuite. Built on top of asyncio, Python's
    standard asynchronous I/O framework, it provides a straightforward API
    based on coroutines, making it easy to write highly concurrent
    applications.
  homepage: https://websockets.readthedocs.io/en/stable/index.html
  repository: https://github.com/aaugustin/websockets
  documentation: https://websockets.readthedocs.io/en/stable/index.html

extra:
  recipe-maintainers:
    - scopatz
    - ocefpaf
    - bollwyvl
